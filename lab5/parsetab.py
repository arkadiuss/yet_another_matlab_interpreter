
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left-\'left+-left*/leftDOTADDDOTSUBleftDOTMULDOTDIVADDASSIGN BREAK COMMENT CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQUALS EYE FLONUM FOR GREATEREQUAL ID IF INTNUM LOWEREQUAL MULASSIGN NOTEQUALS ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructionsinstructions_block : \'{\' instructions \'}\'instructions : instruction instructions\n                    | instruction instruction : assignment \';\'\n                   | if_instruction\n                   | for_instruction\n                   | while_instruction\n                   | print_instruction\n                   | loop_instruction\n                   | return_instruction\n                   | instructions_blockif_instruction : IF \'(\' relational_expr \')\' instructions_block\n                      | IF \'(\' relational_expr \')\' instructionif_instruction : IF \'(\' relational_expr \')\' instructions_block ELSE instruction\n                      | IF \'(\' relational_expr \')\' instruction ELSE instructionfor_instruction : FOR ID \'=\' int \':\' ID instructions_block\n                       | FOR ID \'=\' int \':\' ID instruction\n                       | FOR ID \'=\' ID \':\' ID instructions_block\n                       | FOR ID \'=\' ID \':\' ID instructionwhile_instruction : WHILE \'(\' relational_expr \')\' instructions_block\n                         | WHILE \'(\' relational_expr \')\' instructionloop_instruction : BREAK \';\'\n                        | CONTINUE \';\' return_instruction : RETURN expr \';\'print_instruction : PRINT args_list \';\'args_list : args_list \',\' expr\n                  | args_list \',\' stringargs_list : expr\n                  | stringassignment : ID \'=\' token\n                  | ID ADDASSIGN token\n                  | ID SUBASSIGN token\n                  | ID MULASSIGN token\n                  | ID DIVASSIGN tokenassignment : MID \'=\' elemtoken : IDtoken : int\n             | float\n             | matrix\n             | expr\n             | matrix_expr\n             | unary_expr expr : expr \'+\' term\n            | expr \'-\' term\n            | term term : term \'*\' factor\n            | term \'/\' factor\n            | factorfactor : \'(\' expr \')\'\n              | elem relational_expr : expr GREATEREQUAL expr\n                       | expr EQUALS expr \n                       | expr NOTEQUALS expr\n                       | expr LOWEREQUAL expr\n                       | expr \'<\' expr\n                       | expr \'>\' exprMID : ID \'[\' INTNUM \',\' INTNUM \']\' matrix : \'[\' outerlist \']\' matrix : ONES \'(\' args_list \')\'matrix : ZEROS \'(\' args_list \')\'matrix : EYE \'(\' args_list \')\'vector : \'[\' innerlist \']\'outerlist : outerlist \';\' innerlistouterlist : innerlist innerlist : innerlist \',\' eleminnerlist : eleminnerlist : elem : IDelem : int\n            | floatmatrix_expr : matrix_expr DOTADD matrix_term\n                   | matrix_expr DOTSUB matrix_term\n                   | matrix_termmatrix_term : matrix_term DOTMUL matrix_factor\n                   | matrix_term DOTDIV matrix_factor\n                   | matrix_factormatrix_factor : \'(\' matrix_expr \')\'\n                     | matrixmatrix_factor : IDunary_expr : \'-\' expr\n                  | matrix_expr "\'" int : INTNUM float : FLONUMstring : STRING'
    
_lr_action_items = {'ID':([0,4,6,7,8,9,10,11,12,16,18,21,22,24,25,26,27,28,29,31,32,34,41,48,49,60,62,65,76,78,79,80,81,82,83,85,86,87,88,93,97,98,100,101,103,104,105,106,107,108,109,112,121,125,126,134,135,142,143,144,145,152,153,154,155,156,157,158,159,160,161,],[13,13,-7,-8,-9,-10,-11,-12,-13,33,43,43,13,-6,52,52,52,52,52,43,43,43,43,-24,-25,43,96,43,110,-27,43,43,43,43,43,-26,-3,122,122,43,43,43,122,122,13,43,43,43,43,43,43,13,122,43,43,-13,-15,154,155,-13,-23,13,13,13,13,-16,-17,-13,-21,-13,-19,]),'IF':([0,4,6,7,8,9,10,11,12,22,24,48,49,78,85,86,103,112,134,135,144,145,152,153,154,155,156,157,158,159,160,161,],[15,15,-7,-8,-9,-10,-11,-12,-13,15,-6,-24,-25,-27,-26,-3,15,15,-13,-15,-13,-23,15,15,15,15,-16,-17,-13,-21,-13,-19,]),'FOR':([0,4,6,7,8,9,10,11,12,22,24,48,49,78,85,86,103,112,134,135,144,145,152,153,154,155,156,157,158,159,160,161,],[16,16,-7,-8,-9,-10,-11,-12,-13,16,-6,-24,-25,-27,-26,-3,16,16,-13,-15,-13,-23,16,16,16,16,-16,-17,-13,-21,-13,-19,]),'WHILE':([0,4,6,7,8,9,10,11,12,22,24,48,49,78,85,86,103,112,134,135,144,145,152,153,154,155,156,157,158,159,160,161,],[17,17,-7,-8,-9,-10,-11,-12,-13,17,-6,-24,-25,-27,-26,-3,17,17,-13,-15,-13,-23,17,17,17,17,-16,-17,-13,-21,-13,-19,]),'PRINT':([0,4,6,7,8,9,10,11,12,22,24,48,49,78,85,86,103,112,134,135,144,145,152,153,154,155,156,157,158,159,160,161,],[18,18,-7,-8,-9,-10,-11,-12,-13,18,-6,-24,-25,-27,-26,-3,18,18,-13,-15,-13,-23,18,18,18,18,-16,-17,-13,-21,-13,-19,]),'BREAK':([0,4,6,7,8,9,10,11,12,22,24,48,49,78,85,86,103,112,134,135,144,145,152,153,154,155,156,157,158,159,160,161,],[19,19,-7,-8,-9,-10,-11,-12,-13,19,-6,-24,-25,-27,-26,-3,19,19,-13,-15,-13,-23,19,19,19,19,-16,-17,-13,-21,-13,-19,]),'CONTINUE':([0,4,6,7,8,9,10,11,12,22,24,48,49,78,85,86,103,112,134,135,144,145,152,153,154,155,156,157,158,159,160,161,],[20,20,-7,-8,-9,-10,-11,-12,-13,20,-6,-24,-25,-27,-26,-3,20,20,-13,-15,-13,-23,20,20,20,20,-16,-17,-13,-21,-13,-19,]),'RETURN':([0,4,6,7,8,9,10,11,12,22,24,48,49,78,85,86,103,112,134,135,144,145,152,153,154,155,156,157,158,159,160,161,],[21,21,-7,-8,-9,-10,-11,-12,-13,21,-6,-24,-25,-27,-26,-3,21,21,-13,-15,-13,-23,21,21,21,21,-16,-17,-13,-21,-13,-19,]),'{':([0,4,6,7,8,9,10,11,12,22,24,48,49,78,85,86,103,112,134,135,144,145,152,153,154,155,156,157,158,159,160,161,],[22,22,-7,-8,-9,-10,-11,-12,-13,22,-6,-24,-25,-27,-26,-3,22,22,-13,-15,-13,-23,22,22,22,22,-16,-17,-13,-21,-13,-19,]),'$end':([1,2,3,4,6,7,8,9,10,11,12,23,24,48,49,78,85,86,134,135,144,145,156,157,158,159,160,161,],[0,-1,-2,-5,-7,-8,-9,-10,-11,-12,-13,-4,-6,-24,-25,-27,-26,-3,-13,-15,-13,-23,-16,-17,-13,-21,-13,-19,]),'}':([4,6,7,8,9,10,11,12,23,24,48,49,51,78,85,86,134,135,144,145,156,157,158,159,160,161,],[-5,-7,-8,-9,-10,-11,-12,-13,-4,-6,-24,-25,86,-27,-26,-3,-13,-15,-13,-23,-16,-17,-13,-21,-13,-19,]),';':([5,19,20,35,36,37,38,39,40,42,43,44,45,46,47,50,52,53,54,55,56,57,58,59,60,66,67,68,69,70,71,73,89,90,91,92,95,99,113,114,115,116,117,118,119,120,122,123,124,125,128,131,132,146,147,148,149,150,],[24,48,49,78,-30,-31,-47,-86,-50,-52,-70,-71,-72,-84,-85,85,-38,-32,-39,-40,-41,-42,-43,-44,-69,-75,-78,-33,-34,-35,-36,-37,-83,125,-66,-68,-80,-82,-28,-29,-45,-46,-48,-49,-51,-73,-81,-74,-60,-69,-79,-76,-77,-65,-67,-61,-62,-63,]),'ELSE':([6,7,8,9,10,11,12,24,48,49,78,85,86,134,135,144,145,156,157,158,159,160,161,],[-7,-8,-9,-10,-11,-12,-13,-6,-24,-25,-27,-26,-3,152,153,-13,-23,-16,-17,-13,-21,-13,-19,]),'=':([13,14,33,151,],[25,31,76,-59,]),'ADDASSIGN':([13,],[26,]),'SUBASSIGN':([13,],[27,]),'MULASSIGN':([13,],[28,]),'DIVASSIGN':([13,],[29,]),'[':([13,25,26,27,28,29,62,87,88,100,101,121,],[30,60,60,60,60,60,60,60,60,60,60,60,]),'(':([15,17,18,21,25,26,27,28,29,32,34,41,61,62,63,64,65,79,80,81,82,83,87,88,93,97,98,100,101,104,105,106,107,108,109,121,],[32,34,41,41,62,62,62,62,62,41,41,41,93,62,97,98,41,41,41,41,41,41,121,121,41,41,41,121,121,41,41,41,41,41,41,121,]),'STRING':([18,79,93,97,98,],[39,39,39,39,39,]),'INTNUM':([18,21,25,26,27,28,29,30,31,32,34,41,60,62,65,76,79,80,81,82,83,93,97,98,102,104,105,106,107,108,109,125,126,],[46,46,46,46,46,46,46,72,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,133,46,46,46,46,46,46,46,46,]),'FLONUM':([18,21,25,26,27,28,29,31,32,34,41,60,62,65,79,80,81,82,83,93,97,98,104,105,106,107,108,109,125,126,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'ONES':([25,26,27,28,29,62,87,88,100,101,121,],[61,61,61,61,61,61,61,61,61,61,61,]),'ZEROS':([25,26,27,28,29,62,87,88,100,101,121,],[63,63,63,63,63,63,63,63,63,63,63,]),'EYE':([25,26,27,28,29,62,87,88,100,101,121,],[64,64,64,64,64,64,64,64,64,64,64,]),'-':([25,26,27,28,29,36,38,40,42,43,44,45,46,47,50,52,54,55,57,75,84,96,99,113,115,116,117,118,119,136,137,138,139,140,141,],[65,65,65,65,65,81,-47,-50,-52,-70,-71,-72,-84,-85,81,-70,-71,-72,81,81,81,-70,81,81,-45,-46,-48,-49,-51,81,81,81,81,81,81,]),',':([35,36,37,38,39,40,42,43,44,45,46,47,60,72,91,92,113,114,115,116,117,118,119,125,127,129,130,146,147,],[79,-30,-31,-47,-86,-50,-52,-70,-71,-72,-84,-85,-69,102,126,-68,-28,-29,-45,-46,-48,-49,-51,-69,79,79,79,126,-67,]),')':([36,37,38,39,40,42,43,44,45,46,47,66,67,74,77,84,94,95,96,113,114,115,116,117,118,119,120,122,123,124,127,128,129,130,131,132,136,137,138,139,140,141,148,149,150,],[-30,-31,-47,-86,-50,-52,-70,-71,-72,-84,-85,-75,-78,103,112,119,128,-80,-70,-28,-29,-45,-46,-48,-49,-51,-73,-81,-74,-60,148,-79,149,150,-76,-77,-53,-54,-55,-56,-57,-58,-61,-62,-63,]),'+':([36,38,40,42,43,44,45,46,47,50,52,54,55,57,75,84,96,99,113,115,116,117,118,119,136,137,138,139,140,141,],[80,-47,-50,-52,-70,-71,-72,-84,-85,80,-70,-71,-72,80,80,80,-70,80,80,-45,-46,-48,-49,-51,80,80,80,80,80,80,]),'GREATEREQUAL':([38,40,42,43,44,45,46,47,75,115,116,117,118,119,],[-47,-50,-52,-70,-71,-72,-84,-85,104,-45,-46,-48,-49,-51,]),'EQUALS':([38,40,42,43,44,45,46,47,75,115,116,117,118,119,],[-47,-50,-52,-70,-71,-72,-84,-85,105,-45,-46,-48,-49,-51,]),'NOTEQUALS':([38,40,42,43,44,45,46,47,75,115,116,117,118,119,],[-47,-50,-52,-70,-71,-72,-84,-85,106,-45,-46,-48,-49,-51,]),'LOWEREQUAL':([38,40,42,43,44,45,46,47,75,115,116,117,118,119,],[-47,-50,-52,-70,-71,-72,-84,-85,107,-45,-46,-48,-49,-51,]),'<':([38,40,42,43,44,45,46,47,75,115,116,117,118,119,],[-47,-50,-52,-70,-71,-72,-84,-85,108,-45,-46,-48,-49,-51,]),'>':([38,40,42,43,44,45,46,47,75,115,116,117,118,119,],[-47,-50,-52,-70,-71,-72,-84,-85,109,-45,-46,-48,-49,-51,]),'*':([38,40,42,43,44,45,46,47,52,54,55,96,115,116,117,118,119,],[82,-50,-52,-70,-71,-72,-84,-85,-70,-71,-72,-70,82,82,-48,-49,-51,]),'/':([38,40,42,43,44,45,46,47,52,54,55,96,115,116,117,118,119,],[83,-50,-52,-70,-71,-72,-84,-85,-70,-71,-72,-70,83,83,-48,-49,-51,]),']':([43,44,45,46,47,60,90,91,92,125,133,146,147,],[-70,-71,-72,-84,-85,-69,124,-66,-68,-69,151,-65,-67,]),':':([46,110,111,],[-84,142,143,]),'DOTMUL':([52,56,66,67,95,96,120,122,123,124,128,131,132,148,149,150,],[-81,-80,100,-78,-80,-81,100,-81,100,-60,-79,-76,-77,-61,-62,-63,]),'DOTDIV':([52,56,66,67,95,96,120,122,123,124,128,131,132,148,149,150,],[-81,-80,101,-78,-80,-81,101,-81,101,-60,-79,-76,-77,-61,-62,-63,]),'DOTADD':([52,56,58,66,67,94,95,96,120,122,123,124,128,131,132,148,149,150,],[-81,-80,87,-75,-78,87,-80,-81,-73,-81,-74,-60,-79,-76,-77,-61,-62,-63,]),'DOTSUB':([52,56,58,66,67,94,95,96,120,122,123,124,128,131,132,148,149,150,],[-81,-80,88,-75,-78,88,-80,-81,-73,-81,-74,-60,-79,-76,-77,-61,-62,-63,]),"'":([52,56,58,66,67,95,120,122,123,124,128,131,132,148,149,150,],[-81,-80,89,-75,-78,-80,-73,-81,-74,-60,-79,-76,-77,-61,-62,-63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,4,22,],[3,23,51,]),'instruction':([0,4,22,103,112,152,153,154,155,],[4,4,4,135,145,156,157,159,161,]),'assignment':([0,4,22,103,112,152,153,154,155,],[5,5,5,5,5,5,5,5,5,]),'if_instruction':([0,4,22,103,112,152,153,154,155,],[6,6,6,6,6,6,6,6,6,]),'for_instruction':([0,4,22,103,112,152,153,154,155,],[7,7,7,7,7,7,7,7,7,]),'while_instruction':([0,4,22,103,112,152,153,154,155,],[8,8,8,8,8,8,8,8,8,]),'print_instruction':([0,4,22,103,112,152,153,154,155,],[9,9,9,9,9,9,9,9,9,]),'loop_instruction':([0,4,22,103,112,152,153,154,155,],[10,10,10,10,10,10,10,10,10,]),'return_instruction':([0,4,22,103,112,152,153,154,155,],[11,11,11,11,11,11,11,11,11,]),'instructions_block':([0,4,22,103,112,152,153,154,155,],[12,12,12,134,144,12,12,158,160,]),'MID':([0,4,22,103,112,152,153,154,155,],[14,14,14,14,14,14,14,14,14,]),'args_list':([18,93,97,98,],[35,127,129,130,]),'expr':([18,21,25,26,27,28,29,32,34,41,62,65,79,93,97,98,104,105,106,107,108,109,],[36,50,57,57,57,57,57,75,75,84,84,99,113,36,36,36,136,137,138,139,140,141,]),'string':([18,79,93,97,98,],[37,114,37,37,37,]),'term':([18,21,25,26,27,28,29,32,34,41,62,65,79,80,81,93,97,98,104,105,106,107,108,109,],[38,38,38,38,38,38,38,38,38,38,38,38,38,115,116,38,38,38,38,38,38,38,38,38,]),'factor':([18,21,25,26,27,28,29,32,34,41,62,65,79,80,81,82,83,93,97,98,104,105,106,107,108,109,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,117,118,40,40,40,40,40,40,40,40,40,]),'elem':([18,21,25,26,27,28,29,31,32,34,41,60,62,65,79,80,81,82,83,93,97,98,104,105,106,107,108,109,125,126,],[42,42,42,42,42,42,42,73,42,42,42,92,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,92,147,]),'int':([18,21,25,26,27,28,29,31,32,34,41,60,62,65,76,79,80,81,82,83,93,97,98,104,105,106,107,108,109,125,126,],[44,44,54,54,54,54,54,44,44,44,44,44,44,44,111,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'float':([18,21,25,26,27,28,29,31,32,34,41,60,62,65,79,80,81,82,83,93,97,98,104,105,106,107,108,109,125,126,],[45,45,55,55,55,55,55,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'token':([25,26,27,28,29,],[53,68,69,70,71,]),'matrix':([25,26,27,28,29,62,87,88,100,101,121,],[56,56,56,56,56,95,95,95,95,95,95,]),'matrix_expr':([25,26,27,28,29,62,121,],[58,58,58,58,58,94,94,]),'unary_expr':([25,26,27,28,29,],[59,59,59,59,59,]),'matrix_term':([25,26,27,28,29,62,87,88,121,],[66,66,66,66,66,66,120,123,66,]),'matrix_factor':([25,26,27,28,29,62,87,88,100,101,121,],[67,67,67,67,67,67,67,67,131,132,67,]),'relational_expr':([32,34,],[74,77,]),'outerlist':([60,],[90,]),'innerlist':([60,125,],[91,146,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',27),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Mparser.py',31),
  ('instructions_block -> { instructions }','instructions_block',3,'p_instructions_block','Mparser.py',35),
  ('instructions -> instruction instructions','instructions',2,'p_instructions','Mparser.py',39),
  ('instructions -> instruction','instructions',1,'p_instructions','Mparser.py',40),
  ('instruction -> assignment ;','instruction',2,'p_instruction_1','Mparser.py',44),
  ('instruction -> if_instruction','instruction',1,'p_instruction_1','Mparser.py',45),
  ('instruction -> for_instruction','instruction',1,'p_instruction_1','Mparser.py',46),
  ('instruction -> while_instruction','instruction',1,'p_instruction_1','Mparser.py',47),
  ('instruction -> print_instruction','instruction',1,'p_instruction_1','Mparser.py',48),
  ('instruction -> loop_instruction','instruction',1,'p_instruction_1','Mparser.py',49),
  ('instruction -> return_instruction','instruction',1,'p_instruction_1','Mparser.py',50),
  ('instruction -> instructions_block','instruction',1,'p_instruction_1','Mparser.py',51),
  ('if_instruction -> IF ( relational_expr ) instructions_block','if_instruction',5,'p_if_instruction_1','Mparser.py',55),
  ('if_instruction -> IF ( relational_expr ) instruction','if_instruction',5,'p_if_instruction_1','Mparser.py',56),
  ('if_instruction -> IF ( relational_expr ) instructions_block ELSE instruction','if_instruction',7,'p_if_instruction_2','Mparser.py',60),
  ('if_instruction -> IF ( relational_expr ) instruction ELSE instruction','if_instruction',7,'p_if_instruction_2','Mparser.py',61),
  ('for_instruction -> FOR ID = int : ID instructions_block','for_instruction',7,'p_for_instruction','Mparser.py',65),
  ('for_instruction -> FOR ID = int : ID instruction','for_instruction',7,'p_for_instruction','Mparser.py',66),
  ('for_instruction -> FOR ID = ID : ID instructions_block','for_instruction',7,'p_for_instruction','Mparser.py',67),
  ('for_instruction -> FOR ID = ID : ID instruction','for_instruction',7,'p_for_instruction','Mparser.py',68),
  ('while_instruction -> WHILE ( relational_expr ) instructions_block','while_instruction',5,'p_while_instruction','Mparser.py',72),
  ('while_instruction -> WHILE ( relational_expr ) instruction','while_instruction',5,'p_while_instruction','Mparser.py',73),
  ('loop_instruction -> BREAK ;','loop_instruction',2,'p_loop_intruction','Mparser.py',77),
  ('loop_instruction -> CONTINUE ;','loop_instruction',2,'p_loop_intruction','Mparser.py',78),
  ('return_instruction -> RETURN expr ;','return_instruction',3,'p_return_instruction','Mparser.py',82),
  ('print_instruction -> PRINT args_list ;','print_instruction',3,'p_print_instruction','Mparser.py',86),
  ('args_list -> args_list , expr','args_list',3,'p_args_list_1','Mparser.py',90),
  ('args_list -> args_list , string','args_list',3,'p_args_list_1','Mparser.py',91),
  ('args_list -> expr','args_list',1,'p_args_list_2','Mparser.py',95),
  ('args_list -> string','args_list',1,'p_args_list_2','Mparser.py',96),
  ('assignment -> ID = token','assignment',3,'p_assignment_1','Mparser.py',100),
  ('assignment -> ID ADDASSIGN token','assignment',3,'p_assignment_1','Mparser.py',101),
  ('assignment -> ID SUBASSIGN token','assignment',3,'p_assignment_1','Mparser.py',102),
  ('assignment -> ID MULASSIGN token','assignment',3,'p_assignment_1','Mparser.py',103),
  ('assignment -> ID DIVASSIGN token','assignment',3,'p_assignment_1','Mparser.py',104),
  ('assignment -> MID = elem','assignment',3,'p_assignment_2','Mparser.py',122),
  ('token -> ID','token',1,'p_token_id','Mparser.py',127),
  ('token -> int','token',1,'p_token','Mparser.py',135),
  ('token -> float','token',1,'p_token','Mparser.py',136),
  ('token -> matrix','token',1,'p_token','Mparser.py',137),
  ('token -> expr','token',1,'p_token','Mparser.py',138),
  ('token -> matrix_expr','token',1,'p_token','Mparser.py',139),
  ('token -> unary_expr','token',1,'p_token','Mparser.py',140),
  ('expr -> expr + term','expr',3,'p_expr','Mparser.py',144),
  ('expr -> expr - term','expr',3,'p_expr','Mparser.py',145),
  ('expr -> term','expr',1,'p_expr','Mparser.py',146),
  ('term -> term * factor','term',3,'p_term','Mparser.py',157),
  ('term -> term / factor','term',3,'p_term','Mparser.py',158),
  ('term -> factor','term',1,'p_term','Mparser.py',159),
  ('factor -> ( expr )','factor',3,'p_factor','Mparser.py',175),
  ('factor -> elem','factor',1,'p_factor','Mparser.py',176),
  ('relational_expr -> expr GREATEREQUAL expr','relational_expr',3,'p_relational_expr','Mparser.py',183),
  ('relational_expr -> expr EQUALS expr','relational_expr',3,'p_relational_expr','Mparser.py',184),
  ('relational_expr -> expr NOTEQUALS expr','relational_expr',3,'p_relational_expr','Mparser.py',185),
  ('relational_expr -> expr LOWEREQUAL expr','relational_expr',3,'p_relational_expr','Mparser.py',186),
  ('relational_expr -> expr < expr','relational_expr',3,'p_relational_expr','Mparser.py',187),
  ('relational_expr -> expr > expr','relational_expr',3,'p_relational_expr','Mparser.py',188),
  ('MID -> ID [ INTNUM , INTNUM ]','MID',6,'p_MID','Mparser.py',204),
  ('matrix -> [ outerlist ]','matrix',3,'p_matrix_1','Mparser.py',208),
  ('matrix -> ONES ( args_list )','matrix',4,'p_matrix_2','Mparser.py',215),
  ('matrix -> ZEROS ( args_list )','matrix',4,'p_matrix_3','Mparser.py',219),
  ('matrix -> EYE ( args_list )','matrix',4,'p_matrix_4','Mparser.py',223),
  ('vector -> [ innerlist ]','vector',3,'p_vector','Mparser.py',227),
  ('outerlist -> outerlist ; innerlist','outerlist',3,'p_outerlist_1','Mparser.py',231),
  ('outerlist -> innerlist','outerlist',1,'p_outerlist_2','Mparser.py',235),
  ('innerlist -> innerlist , elem','innerlist',3,'p_innerlist_1','Mparser.py',239),
  ('innerlist -> elem','innerlist',1,'p_innerlist_2','Mparser.py',243),
  ('innerlist -> <empty>','innerlist',0,'p_innerlist_3','Mparser.py',247),
  ('elem -> ID','elem',1,'p_elem_id','Mparser.py',251),
  ('elem -> int','elem',1,'p_elem','Mparser.py',259),
  ('elem -> float','elem',1,'p_elem','Mparser.py',260),
  ('matrix_expr -> matrix_expr DOTADD matrix_term','matrix_expr',3,'p_matrix_expr','Mparser.py',264),
  ('matrix_expr -> matrix_expr DOTSUB matrix_term','matrix_expr',3,'p_matrix_expr','Mparser.py',265),
  ('matrix_expr -> matrix_term','matrix_expr',1,'p_matrix_expr','Mparser.py',266),
  ('matrix_term -> matrix_term DOTMUL matrix_factor','matrix_term',3,'p_matrix_term','Mparser.py',273),
  ('matrix_term -> matrix_term DOTDIV matrix_factor','matrix_term',3,'p_matrix_term','Mparser.py',274),
  ('matrix_term -> matrix_factor','matrix_term',1,'p_matrix_term','Mparser.py',275),
  ('matrix_factor -> ( matrix_expr )','matrix_factor',3,'p_matrix_factor_1','Mparser.py',282),
  ('matrix_factor -> matrix','matrix_factor',1,'p_matrix_factor_1','Mparser.py',283),
  ('matrix_factor -> ID','matrix_factor',1,'p_matrix_factor_2','Mparser.py',290),
  ('unary_expr -> - expr','unary_expr',2,'p_unary_expr','Mparser.py',294),
  ("unary_expr -> matrix_expr '",'unary_expr',2,'p_unary_expr','Mparser.py',295),
  ('int -> INTNUM','int',1,'p_int','Mparser.py',306),
  ('float -> FLONUM','float',1,'p_float','Mparser.py',310),
  ('string -> STRING','string',1,'p_string','Mparser.py',314),
]
