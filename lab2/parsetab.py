
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-ADDASSIGN BREAK COMMENT CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQUALS EYE FLONUM GREATEREQUAL ID IF INTNUM LOWEREQUAL MULASSIGN NOTEQUALS ONES PRINT STRING SUBASSIGN THEN WHILE ZEROS returnprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions_block : \'{\' instructions \'}\'instructions : instructions instruction instructions : instruction instruction : assignment \';\'\n                   | if_instructionif_instruction : IF \'(\' relational_expr \')\' instructions_blockassignment : ID \'=\' token\n                  | MID \'=\' elem\n                  | ID ADDASSIGN token\n                  | ID SUBASSIGN token\n                  | ID MULASSIGN token\n                  | ID DIVASSIGN tokentoken : ID\n             | INTNUM\n             | FLONUM\n             | matrix\n             | expr\n             | matrix_expr\n             | \'-\' ID\n             | ID "\'" expr : expr \'+\' term\n            | expr \'-\' term\n            | term term : term \'*\' factor\n            | term \'/\' factor\n            | factorfactor : \'(\' expr \')\'\n              | ID relational_expr : ID GREATEREQUAL INTNUM\n                       | ID EQUALS INTNUM \n                       | ID LOWEREQUAL INTNUM  MID : ID \'[\' INTNUM \',\' INTNUM \']\' matrix : \'[\' outerlist \']\'\n              | ONES \'(\' INTNUM \')\'\n              | ZEROS \'(\' INTNUM \')\'\n              | EYE \'(\' INTNUM \')\'outerlist : outerlist \';\' innerlist\n                 | innerlistinnerlist : innerlist \',\' elem\n                 | elemelem : ID\n            | INTNUM\n            | FLONUMmatrix_expr : matrix_expr DOTADD matrix_term\n                   | matrix_expr DOTSUB matrix_term\n                   | matrix_termmatrix_term : matrix_term DOTMUL matrix_factor\n                   | matrix_term DOTDIV matrix_factor\n                   | matrix_factormatrix_factor : \'(\' matrix_expr \')\'\n                     | ID'
    
_lr_action_items = {'$end':([0,1,2,3,4,6,10,11,93,105,],[-3,0,-1,-2,-6,-8,-5,-7,-9,-4,]),'ID':([0,3,4,6,10,11,12,13,14,15,16,18,19,27,28,30,49,50,51,52,63,64,65,66,73,77,81,82,93,94,104,105,],[7,7,-6,-8,-5,-7,20,20,20,20,20,43,47,53,43,60,74,74,78,78,74,74,78,78,74,78,43,43,-9,7,7,-4,]),'IF':([0,3,4,6,10,11,93,94,104,105,],[9,9,-6,-8,-5,-7,-9,9,9,-4,]),'}':([4,6,10,11,93,104,105,],[-6,-8,-5,-7,-9,105,-4,]),';':([5,20,21,22,23,24,25,26,33,34,35,36,37,38,39,40,42,43,44,45,48,53,54,55,56,72,74,75,76,78,79,80,84,85,88,89,90,91,98,99,100,101,102,],[11,-16,-10,-17,-18,-19,-20,-21,-26,-49,-29,-52,-12,-13,-14,-15,-11,-44,-45,-46,-23,-22,81,-41,-43,-24,-31,-25,-47,-54,-48,-36,-30,-53,-27,-28,-50,-51,-40,-42,-37,-38,-39,]),'=':([7,8,103,],[12,18,-35,]),'ADDASSIGN':([7,],[13,]),'SUBASSIGN':([7,],[14,]),'MULASSIGN':([7,],[15,]),'DIVASSIGN':([7,],[16,]),'[':([7,12,13,14,15,16,],[17,28,28,28,28,28,]),'(':([9,12,13,14,15,16,29,30,31,32,49,50,51,52,63,64,65,66,73,77,],[19,30,30,30,30,30,57,30,61,62,73,73,77,77,73,73,77,77,73,77,]),'INTNUM':([12,13,14,15,16,17,18,28,57,61,62,67,69,70,71,81,82,],[22,22,22,22,22,41,44,44,83,86,87,92,95,96,97,44,44,]),'FLONUM':([12,13,14,15,16,18,28,81,82,],[23,23,23,23,23,45,45,45,45,]),'-':([12,13,14,15,16,20,25,33,35,58,60,72,74,75,84,88,89,],[27,27,27,27,27,-31,50,-26,-29,50,-31,-24,-31,-25,-30,-27,-28,]),'ONES':([12,13,14,15,16,],[29,29,29,29,29,]),'ZEROS':([12,13,14,15,16,],[31,31,31,31,31,]),'EYE':([12,13,14,15,16,],[32,32,32,32,32,]),"'":([20,],[48,]),'*':([20,33,35,60,72,74,75,84,88,89,],[-31,63,-29,-31,63,-31,63,-30,-27,-28,]),'/':([20,33,35,60,72,74,75,84,88,89,],[-31,64,-29,-31,64,-31,64,-30,-27,-28,]),'+':([20,25,33,35,58,60,72,74,75,84,88,89,],[-31,49,-26,-29,49,-31,-24,-31,-25,-30,-27,-28,]),'DOTMUL':([20,34,36,60,76,78,79,85,90,91,],[-54,65,-52,-54,65,-54,65,-53,-50,-51,]),'DOTDIV':([20,34,36,60,76,78,79,85,90,91,],[-54,66,-52,-54,66,-54,66,-53,-50,-51,]),'DOTADD':([20,26,34,36,59,60,76,78,79,85,90,91,],[-54,51,-49,-52,51,-54,-47,-54,-48,-53,-50,-51,]),'DOTSUB':([20,26,34,36,59,60,76,78,79,85,90,91,],[-54,52,-49,-52,52,-54,-47,-54,-48,-53,-50,-51,]),')':([33,34,35,36,46,58,59,60,72,74,75,76,78,79,83,84,85,86,87,88,89,90,91,95,96,97,],[-26,-49,-29,-52,68,84,85,-31,-24,-31,-25,-47,-54,-48,100,-30,-53,101,102,-27,-28,-50,-51,-32,-33,-34,]),',':([41,43,44,45,55,56,98,99,],[67,-44,-45,-46,82,-43,82,-42,]),']':([43,44,45,54,55,56,92,98,99,],[-44,-45,-46,80,-41,-43,103,-40,-42,]),'GREATEREQUAL':([47,],[69,]),'EQUALS':([47,],[70,]),'LOWEREQUAL':([47,],[71,]),'{':([68,],[94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,94,],[3,104,]),'instruction':([0,3,94,104,],[4,10,4,10,]),'assignment':([0,3,94,104,],[5,5,5,5,]),'if_instruction':([0,3,94,104,],[6,6,6,6,]),'MID':([0,3,94,104,],[8,8,8,8,]),'token':([12,13,14,15,16,],[21,37,38,39,40,]),'matrix':([12,13,14,15,16,],[24,24,24,24,24,]),'expr':([12,13,14,15,16,30,73,],[25,25,25,25,25,58,58,]),'matrix_expr':([12,13,14,15,16,30,77,],[26,26,26,26,26,59,59,]),'term':([12,13,14,15,16,30,49,50,73,],[33,33,33,33,33,33,72,75,33,]),'matrix_term':([12,13,14,15,16,30,51,52,77,],[34,34,34,34,34,34,76,79,34,]),'factor':([12,13,14,15,16,30,49,50,63,64,73,],[35,35,35,35,35,35,35,35,88,89,35,]),'matrix_factor':([12,13,14,15,16,30,51,52,65,66,77,],[36,36,36,36,36,36,36,36,90,91,36,]),'elem':([18,28,81,82,],[42,56,56,99,]),'relational_expr':([19,],[46,]),'outerlist':([28,],[54,]),'innerlist':([28,81,],[55,98,]),'instructions_block':([68,],[93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',24),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',27),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',30),
  ('instructions_block -> { instructions }','instructions_block',3,'p_instructions_block','Mparser.py',33),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',36),
  ('instructions -> instruction','instructions',1,'p_instructions_2','Mparser.py',39),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',42),
  ('instruction -> if_instruction','instruction',1,'p_instruction','Mparser.py',43),
  ('if_instruction -> IF ( relational_expr ) instructions_block','if_instruction',5,'p_if_instruction','Mparser.py',46),
  ('assignment -> ID = token','assignment',3,'p_assignment','Mparser.py',49),
  ('assignment -> MID = elem','assignment',3,'p_assignment','Mparser.py',50),
  ('assignment -> ID ADDASSIGN token','assignment',3,'p_assignment','Mparser.py',51),
  ('assignment -> ID SUBASSIGN token','assignment',3,'p_assignment','Mparser.py',52),
  ('assignment -> ID MULASSIGN token','assignment',3,'p_assignment','Mparser.py',53),
  ('assignment -> ID DIVASSIGN token','assignment',3,'p_assignment','Mparser.py',54),
  ('token -> ID','token',1,'p_token','Mparser.py',58),
  ('token -> INTNUM','token',1,'p_token','Mparser.py',59),
  ('token -> FLONUM','token',1,'p_token','Mparser.py',60),
  ('token -> matrix','token',1,'p_token','Mparser.py',61),
  ('token -> expr','token',1,'p_token','Mparser.py',62),
  ('token -> matrix_expr','token',1,'p_token','Mparser.py',63),
  ('token -> - ID','token',2,'p_token','Mparser.py',64),
  ("token -> ID '",'token',2,'p_token','Mparser.py',65),
  ('expr -> expr + term','expr',3,'p_expr','Mparser.py',68),
  ('expr -> expr - term','expr',3,'p_expr','Mparser.py',69),
  ('expr -> term','expr',1,'p_expr','Mparser.py',70),
  ('term -> term * factor','term',3,'p_term','Mparser.py',73),
  ('term -> term / factor','term',3,'p_term','Mparser.py',74),
  ('term -> factor','term',1,'p_term','Mparser.py',75),
  ('factor -> ( expr )','factor',3,'p_factor','Mparser.py',78),
  ('factor -> ID','factor',1,'p_factor','Mparser.py',79),
  ('relational_expr -> ID GREATEREQUAL INTNUM','relational_expr',3,'p_relational_expr','Mparser.py',82),
  ('relational_expr -> ID EQUALS INTNUM','relational_expr',3,'p_relational_expr','Mparser.py',83),
  ('relational_expr -> ID LOWEREQUAL INTNUM','relational_expr',3,'p_relational_expr','Mparser.py',84),
  ('MID -> ID [ INTNUM , INTNUM ]','MID',6,'p_MID','Mparser.py',87),
  ('matrix -> [ outerlist ]','matrix',3,'p_matrix','Mparser.py',90),
  ('matrix -> ONES ( INTNUM )','matrix',4,'p_matrix','Mparser.py',91),
  ('matrix -> ZEROS ( INTNUM )','matrix',4,'p_matrix','Mparser.py',92),
  ('matrix -> EYE ( INTNUM )','matrix',4,'p_matrix','Mparser.py',93),
  ('outerlist -> outerlist ; innerlist','outerlist',3,'p_outerlist','Mparser.py',96),
  ('outerlist -> innerlist','outerlist',1,'p_outerlist','Mparser.py',97),
  ('innerlist -> innerlist , elem','innerlist',3,'p_innerlist','Mparser.py',100),
  ('innerlist -> elem','innerlist',1,'p_innerlist','Mparser.py',101),
  ('elem -> ID','elem',1,'p_elem','Mparser.py',104),
  ('elem -> INTNUM','elem',1,'p_elem','Mparser.py',105),
  ('elem -> FLONUM','elem',1,'p_elem','Mparser.py',106),
  ('matrix_expr -> matrix_expr DOTADD matrix_term','matrix_expr',3,'p_matrix_expr','Mparser.py',109),
  ('matrix_expr -> matrix_expr DOTSUB matrix_term','matrix_expr',3,'p_matrix_expr','Mparser.py',110),
  ('matrix_expr -> matrix_term','matrix_expr',1,'p_matrix_expr','Mparser.py',111),
  ('matrix_term -> matrix_term DOTMUL matrix_factor','matrix_term',3,'p_matrix_term','Mparser.py',114),
  ('matrix_term -> matrix_term DOTDIV matrix_factor','matrix_term',3,'p_matrix_term','Mparser.py',115),
  ('matrix_term -> matrix_factor','matrix_term',1,'p_matrix_term','Mparser.py',116),
  ('matrix_factor -> ( matrix_expr )','matrix_factor',3,'p_matrix_facotr','Mparser.py',119),
  ('matrix_factor -> ID','matrix_factor',1,'p_matrix_facotr','Mparser.py',120),
]
