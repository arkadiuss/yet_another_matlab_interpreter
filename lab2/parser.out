Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADDASSIGN
    BREAK
    COMMENT
    CONTINUE
    DIVASSIGN
    ELSE
    MULASSIGN
    NOTEQUALS
    PRINT
    STRING
    SUBASSIGN
    THEN
    WHILE
    return

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions_block -> { instructions }
Rule 5     instructions -> instructions instruction
Rule 6     instructions -> instruction
Rule 7     instruction -> assignment ;
Rule 8     instruction -> if_instruction
Rule 9     if_instruction -> IF ( relational_expr ) instructions_block
Rule 10    assignment -> ID = INTNUM
Rule 11    assignment -> ID = FLONUM
Rule 12    assignment -> ID = matrix
Rule 13    assignment -> ID = expr
Rule 14    assignment -> MID = INTNUM
Rule 15    assignment -> ID = matrix_expr
Rule 16    expr -> expr + term
Rule 17    expr -> expr - term
Rule 18    expr -> term
Rule 19    term -> term * factor
Rule 20    term -> term / factor
Rule 21    term -> factor
Rule 22    factor -> ( expr )
Rule 23    factor -> ID
Rule 24    relational_expr -> ID GREATEREQUAL INTNUM
Rule 25    relational_expr -> ID EQUALS INTNUM
Rule 26    relational_expr -> ID LOWEREQUAL INTNUM
Rule 27    MID -> ID [ INTNUM , INTNUM ]
Rule 28    matrix -> [ outerlist ]
Rule 29    matrix -> ONES ( INTNUM )
Rule 30    matrix -> ZEROS ( INTNUM )
Rule 31    matrix -> EYE ( INTNUM )
Rule 32    outerlist -> outerlist ; innerlist
Rule 33    outerlist -> innerlist
Rule 34    innerlist -> innerlist , elem
Rule 35    innerlist -> elem
Rule 36    elem -> ID
Rule 37    elem -> INTNUM
Rule 38    elem -> FLONUM
Rule 39    matrix_expr -> matrix_expr DOTADD matrix_term
Rule 40    matrix_expr -> matrix_expr DOTSUB matrix_term
Rule 41    matrix_expr -> matrix_term
Rule 42    matrix_term -> matrix_term DOTMUL matrix_factor
Rule 43    matrix_term -> matrix_term DOTDIV matrix_factor
Rule 44    matrix_term -> matrix_factor
Rule 45    matrix_factor -> ( matrix_expr )
Rule 46    matrix_factor -> ID

Terminals, with rules where they appear

(                    : 9 22 29 30 31 45
)                    : 9 22 29 30 31 45
*                    : 19
+                    : 16
,                    : 27 34
-                    : 17
/                    : 20
;                    : 7 32
=                    : 10 11 12 13 14 15
ADDASSIGN            : 
BREAK                : 
COMMENT              : 
CONTINUE             : 
DIVASSIGN            : 
DOTADD               : 39
DOTDIV               : 43
DOTMUL               : 42
DOTSUB               : 40
ELSE                 : 
EQUALS               : 25
EYE                  : 31
FLONUM               : 11 38
GREATEREQUAL         : 24
ID                   : 10 11 12 13 15 23 24 25 26 27 36 46
IF                   : 9
INTNUM               : 10 14 24 25 26 27 27 29 30 31 37
LOWEREQUAL           : 26
MULASSIGN            : 
NOTEQUALS            : 
ONES                 : 29
PRINT                : 
STRING               : 
SUBASSIGN            : 
THEN                 : 
WHILE                : 
ZEROS                : 30
[                    : 27 28
]                    : 27 28
error                : 
return               : 
{                    : 4
}                    : 4

Nonterminals, with rules where they appear

MID                  : 14
assignment           : 7
elem                 : 34 35
expr                 : 13 16 17 22
factor               : 19 20 21
if_instruction       : 8
innerlist            : 32 33 34
instruction          : 5 6
instructions         : 2 4 5
instructions_block   : 9
instructions_opt     : 1
matrix               : 12
matrix_expr          : 15 39 40 45
matrix_factor        : 42 43 44
matrix_term          : 39 40 41 42 43
outerlist            : 28 32
program              : 0
relational_expr      : 9
term                 : 16 17 18 19 20

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (5) instructions -> . instructions instruction
    (6) instructions -> . instruction
    (7) instruction -> . assignment ;
    (8) instruction -> . if_instruction
    (10) assignment -> . ID = INTNUM
    (11) assignment -> . ID = FLONUM
    (12) assignment -> . ID = matrix
    (13) assignment -> . ID = expr
    (14) assignment -> . MID = INTNUM
    (15) assignment -> . ID = matrix_expr
    (9) if_instruction -> . IF ( relational_expr ) instructions_block
    (27) MID -> . ID [ INTNUM , INTNUM ]

    $end            reduce using rule 3 (instructions_opt -> .)
    ID              shift and go to state 7
    IF              shift and go to state 9

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    assignment                     shift and go to state 5
    if_instruction                 shift and go to state 6
    MID                            shift and go to state 8

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (5) instructions -> instructions . instruction
    (7) instruction -> . assignment ;
    (8) instruction -> . if_instruction
    (10) assignment -> . ID = INTNUM
    (11) assignment -> . ID = FLONUM
    (12) assignment -> . ID = matrix
    (13) assignment -> . ID = expr
    (14) assignment -> . MID = INTNUM
    (15) assignment -> . ID = matrix_expr
    (9) if_instruction -> . IF ( relational_expr ) instructions_block
    (27) MID -> . ID [ INTNUM , INTNUM ]

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    ID              shift and go to state 7
    IF              shift and go to state 9

    instruction                    shift and go to state 10
    assignment                     shift and go to state 5
    if_instruction                 shift and go to state 6
    MID                            shift and go to state 8

state 4

    (6) instructions -> instruction .

    ID              reduce using rule 6 (instructions -> instruction .)
    IF              reduce using rule 6 (instructions -> instruction .)
    $end            reduce using rule 6 (instructions -> instruction .)
    }               reduce using rule 6 (instructions -> instruction .)


state 5

    (7) instruction -> assignment . ;

    ;               shift and go to state 11


state 6

    (8) instruction -> if_instruction .

    ID              reduce using rule 8 (instruction -> if_instruction .)
    IF              reduce using rule 8 (instruction -> if_instruction .)
    $end            reduce using rule 8 (instruction -> if_instruction .)
    }               reduce using rule 8 (instruction -> if_instruction .)


state 7

    (10) assignment -> ID . = INTNUM
    (11) assignment -> ID . = FLONUM
    (12) assignment -> ID . = matrix
    (13) assignment -> ID . = expr
    (15) assignment -> ID . = matrix_expr
    (27) MID -> ID . [ INTNUM , INTNUM ]

    =               shift and go to state 12
    [               shift and go to state 13


state 8

    (14) assignment -> MID . = INTNUM

    =               shift and go to state 14


state 9

    (9) if_instruction -> IF . ( relational_expr ) instructions_block

    (               shift and go to state 15


state 10

    (5) instructions -> instructions instruction .

    ID              reduce using rule 5 (instructions -> instructions instruction .)
    IF              reduce using rule 5 (instructions -> instructions instruction .)
    $end            reduce using rule 5 (instructions -> instructions instruction .)
    }               reduce using rule 5 (instructions -> instructions instruction .)


state 11

    (7) instruction -> assignment ; .

    ID              reduce using rule 7 (instruction -> assignment ; .)
    IF              reduce using rule 7 (instruction -> assignment ; .)
    $end            reduce using rule 7 (instruction -> assignment ; .)
    }               reduce using rule 7 (instruction -> assignment ; .)


state 12

    (10) assignment -> ID = . INTNUM
    (11) assignment -> ID = . FLONUM
    (12) assignment -> ID = . matrix
    (13) assignment -> ID = . expr
    (15) assignment -> ID = . matrix_expr
    (28) matrix -> . [ outerlist ]
    (29) matrix -> . ONES ( INTNUM )
    (30) matrix -> . ZEROS ( INTNUM )
    (31) matrix -> . EYE ( INTNUM )
    (16) expr -> . expr + term
    (17) expr -> . expr - term
    (18) expr -> . term
    (39) matrix_expr -> . matrix_expr DOTADD matrix_term
    (40) matrix_expr -> . matrix_expr DOTSUB matrix_term
    (41) matrix_expr -> . matrix_term
    (19) term -> . term * factor
    (20) term -> . term / factor
    (21) term -> . factor
    (42) matrix_term -> . matrix_term DOTMUL matrix_factor
    (43) matrix_term -> . matrix_term DOTDIV matrix_factor
    (44) matrix_term -> . matrix_factor
    (22) factor -> . ( expr )
    (23) factor -> . ID
    (45) matrix_factor -> . ( matrix_expr )
    (46) matrix_factor -> . ID

    INTNUM          shift and go to state 17
    FLONUM          shift and go to state 18
    [               shift and go to state 22
    ONES            shift and go to state 23
    ZEROS           shift and go to state 25
    EYE             shift and go to state 26
    (               shift and go to state 24
    ID              shift and go to state 16

    matrix                         shift and go to state 19
    expr                           shift and go to state 20
    matrix_expr                    shift and go to state 21
    term                           shift and go to state 27
    matrix_term                    shift and go to state 28
    factor                         shift and go to state 29
    matrix_factor                  shift and go to state 30

state 13

    (27) MID -> ID [ . INTNUM , INTNUM ]

    INTNUM          shift and go to state 31


state 14

    (14) assignment -> MID = . INTNUM

    INTNUM          shift and go to state 32


state 15

    (9) if_instruction -> IF ( . relational_expr ) instructions_block
    (24) relational_expr -> . ID GREATEREQUAL INTNUM
    (25) relational_expr -> . ID EQUALS INTNUM
    (26) relational_expr -> . ID LOWEREQUAL INTNUM

    ID              shift and go to state 34

    relational_expr                shift and go to state 33

state 16

    (23) factor -> ID .
    (46) matrix_factor -> ID .

  ! reduce/reduce conflict for ; resolved using rule 23 (factor -> ID .)
  ! reduce/reduce conflict for ) resolved using rule 23 (factor -> ID .)
    *               reduce using rule 23 (factor -> ID .)
    /               reduce using rule 23 (factor -> ID .)
    +               reduce using rule 23 (factor -> ID .)
    -               reduce using rule 23 (factor -> ID .)
    ;               reduce using rule 23 (factor -> ID .)
    )               reduce using rule 23 (factor -> ID .)
    DOTMUL          reduce using rule 46 (matrix_factor -> ID .)
    DOTDIV          reduce using rule 46 (matrix_factor -> ID .)
    DOTADD          reduce using rule 46 (matrix_factor -> ID .)
    DOTSUB          reduce using rule 46 (matrix_factor -> ID .)

  ! ;               [ reduce using rule 46 (matrix_factor -> ID .) ]
  ! )               [ reduce using rule 46 (matrix_factor -> ID .) ]


state 17

    (10) assignment -> ID = INTNUM .

    ;               reduce using rule 10 (assignment -> ID = INTNUM .)


state 18

    (11) assignment -> ID = FLONUM .

    ;               reduce using rule 11 (assignment -> ID = FLONUM .)


state 19

    (12) assignment -> ID = matrix .

    ;               reduce using rule 12 (assignment -> ID = matrix .)


state 20

    (13) assignment -> ID = expr .
    (16) expr -> expr . + term
    (17) expr -> expr . - term

    ;               reduce using rule 13 (assignment -> ID = expr .)
    +               shift and go to state 35
    -               shift and go to state 36


state 21

    (15) assignment -> ID = matrix_expr .
    (39) matrix_expr -> matrix_expr . DOTADD matrix_term
    (40) matrix_expr -> matrix_expr . DOTSUB matrix_term

    ;               reduce using rule 15 (assignment -> ID = matrix_expr .)
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38


state 22

    (28) matrix -> [ . outerlist ]
    (32) outerlist -> . outerlist ; innerlist
    (33) outerlist -> . innerlist
    (34) innerlist -> . innerlist , elem
    (35) innerlist -> . elem
    (36) elem -> . ID
    (37) elem -> . INTNUM
    (38) elem -> . FLONUM

    ID              shift and go to state 42
    INTNUM          shift and go to state 43
    FLONUM          shift and go to state 44

    outerlist                      shift and go to state 39
    innerlist                      shift and go to state 40
    elem                           shift and go to state 41

state 23

    (29) matrix -> ONES . ( INTNUM )

    (               shift and go to state 45


state 24

    (22) factor -> ( . expr )
    (45) matrix_factor -> ( . matrix_expr )
    (16) expr -> . expr + term
    (17) expr -> . expr - term
    (18) expr -> . term
    (39) matrix_expr -> . matrix_expr DOTADD matrix_term
    (40) matrix_expr -> . matrix_expr DOTSUB matrix_term
    (41) matrix_expr -> . matrix_term
    (19) term -> . term * factor
    (20) term -> . term / factor
    (21) term -> . factor
    (42) matrix_term -> . matrix_term DOTMUL matrix_factor
    (43) matrix_term -> . matrix_term DOTDIV matrix_factor
    (44) matrix_term -> . matrix_factor
    (22) factor -> . ( expr )
    (23) factor -> . ID
    (45) matrix_factor -> . ( matrix_expr )
    (46) matrix_factor -> . ID

    (               shift and go to state 24
    ID              shift and go to state 16

    expr                           shift and go to state 46
    matrix_expr                    shift and go to state 47
    term                           shift and go to state 27
    matrix_term                    shift and go to state 28
    factor                         shift and go to state 29
    matrix_factor                  shift and go to state 30

state 25

    (30) matrix -> ZEROS . ( INTNUM )

    (               shift and go to state 48


state 26

    (31) matrix -> EYE . ( INTNUM )

    (               shift and go to state 49


state 27

    (18) expr -> term .
    (19) term -> term . * factor
    (20) term -> term . / factor

    +               reduce using rule 18 (expr -> term .)
    -               reduce using rule 18 (expr -> term .)
    ;               reduce using rule 18 (expr -> term .)
    )               reduce using rule 18 (expr -> term .)
    *               shift and go to state 50
    /               shift and go to state 51


state 28

    (41) matrix_expr -> matrix_term .
    (42) matrix_term -> matrix_term . DOTMUL matrix_factor
    (43) matrix_term -> matrix_term . DOTDIV matrix_factor

    DOTADD          reduce using rule 41 (matrix_expr -> matrix_term .)
    DOTSUB          reduce using rule 41 (matrix_expr -> matrix_term .)
    ;               reduce using rule 41 (matrix_expr -> matrix_term .)
    )               reduce using rule 41 (matrix_expr -> matrix_term .)
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53


state 29

    (21) term -> factor .

    *               reduce using rule 21 (term -> factor .)
    /               reduce using rule 21 (term -> factor .)
    +               reduce using rule 21 (term -> factor .)
    -               reduce using rule 21 (term -> factor .)
    ;               reduce using rule 21 (term -> factor .)
    )               reduce using rule 21 (term -> factor .)


state 30

    (44) matrix_term -> matrix_factor .

    DOTMUL          reduce using rule 44 (matrix_term -> matrix_factor .)
    DOTDIV          reduce using rule 44 (matrix_term -> matrix_factor .)
    DOTADD          reduce using rule 44 (matrix_term -> matrix_factor .)
    DOTSUB          reduce using rule 44 (matrix_term -> matrix_factor .)
    ;               reduce using rule 44 (matrix_term -> matrix_factor .)
    )               reduce using rule 44 (matrix_term -> matrix_factor .)


state 31

    (27) MID -> ID [ INTNUM . , INTNUM ]

    ,               shift and go to state 54


state 32

    (14) assignment -> MID = INTNUM .

    ;               reduce using rule 14 (assignment -> MID = INTNUM .)


state 33

    (9) if_instruction -> IF ( relational_expr . ) instructions_block

    )               shift and go to state 55


state 34

    (24) relational_expr -> ID . GREATEREQUAL INTNUM
    (25) relational_expr -> ID . EQUALS INTNUM
    (26) relational_expr -> ID . LOWEREQUAL INTNUM

    GREATEREQUAL    shift and go to state 56
    EQUALS          shift and go to state 57
    LOWEREQUAL      shift and go to state 58


state 35

    (16) expr -> expr + . term
    (19) term -> . term * factor
    (20) term -> . term / factor
    (21) term -> . factor
    (22) factor -> . ( expr )
    (23) factor -> . ID

    (               shift and go to state 60
    ID              shift and go to state 61

    term                           shift and go to state 59
    factor                         shift and go to state 29

state 36

    (17) expr -> expr - . term
    (19) term -> . term * factor
    (20) term -> . term / factor
    (21) term -> . factor
    (22) factor -> . ( expr )
    (23) factor -> . ID

    (               shift and go to state 60
    ID              shift and go to state 61

    term                           shift and go to state 62
    factor                         shift and go to state 29

state 37

    (39) matrix_expr -> matrix_expr DOTADD . matrix_term
    (42) matrix_term -> . matrix_term DOTMUL matrix_factor
    (43) matrix_term -> . matrix_term DOTDIV matrix_factor
    (44) matrix_term -> . matrix_factor
    (45) matrix_factor -> . ( matrix_expr )
    (46) matrix_factor -> . ID

    (               shift and go to state 64
    ID              shift and go to state 65

    matrix_term                    shift and go to state 63
    matrix_factor                  shift and go to state 30

state 38

    (40) matrix_expr -> matrix_expr DOTSUB . matrix_term
    (42) matrix_term -> . matrix_term DOTMUL matrix_factor
    (43) matrix_term -> . matrix_term DOTDIV matrix_factor
    (44) matrix_term -> . matrix_factor
    (45) matrix_factor -> . ( matrix_expr )
    (46) matrix_factor -> . ID

    (               shift and go to state 64
    ID              shift and go to state 65

    matrix_term                    shift and go to state 66
    matrix_factor                  shift and go to state 30

state 39

    (28) matrix -> [ outerlist . ]
    (32) outerlist -> outerlist . ; innerlist

    ]               shift and go to state 67
    ;               shift and go to state 68


state 40

    (33) outerlist -> innerlist .
    (34) innerlist -> innerlist . , elem

    ]               reduce using rule 33 (outerlist -> innerlist .)
    ;               reduce using rule 33 (outerlist -> innerlist .)
    ,               shift and go to state 69


state 41

    (35) innerlist -> elem .

    ,               reduce using rule 35 (innerlist -> elem .)
    ]               reduce using rule 35 (innerlist -> elem .)
    ;               reduce using rule 35 (innerlist -> elem .)


state 42

    (36) elem -> ID .

    ,               reduce using rule 36 (elem -> ID .)
    ]               reduce using rule 36 (elem -> ID .)
    ;               reduce using rule 36 (elem -> ID .)


state 43

    (37) elem -> INTNUM .

    ,               reduce using rule 37 (elem -> INTNUM .)
    ]               reduce using rule 37 (elem -> INTNUM .)
    ;               reduce using rule 37 (elem -> INTNUM .)


state 44

    (38) elem -> FLONUM .

    ,               reduce using rule 38 (elem -> FLONUM .)
    ]               reduce using rule 38 (elem -> FLONUM .)
    ;               reduce using rule 38 (elem -> FLONUM .)


state 45

    (29) matrix -> ONES ( . INTNUM )

    INTNUM          shift and go to state 70


state 46

    (22) factor -> ( expr . )
    (16) expr -> expr . + term
    (17) expr -> expr . - term

    )               shift and go to state 71
    +               shift and go to state 35
    -               shift and go to state 36


state 47

    (45) matrix_factor -> ( matrix_expr . )
    (39) matrix_expr -> matrix_expr . DOTADD matrix_term
    (40) matrix_expr -> matrix_expr . DOTSUB matrix_term

    )               shift and go to state 72
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38


state 48

    (30) matrix -> ZEROS ( . INTNUM )

    INTNUM          shift and go to state 73


state 49

    (31) matrix -> EYE ( . INTNUM )

    INTNUM          shift and go to state 74


state 50

    (19) term -> term * . factor
    (22) factor -> . ( expr )
    (23) factor -> . ID

    (               shift and go to state 60
    ID              shift and go to state 61

    factor                         shift and go to state 75

state 51

    (20) term -> term / . factor
    (22) factor -> . ( expr )
    (23) factor -> . ID

    (               shift and go to state 60
    ID              shift and go to state 61

    factor                         shift and go to state 76

state 52

    (42) matrix_term -> matrix_term DOTMUL . matrix_factor
    (45) matrix_factor -> . ( matrix_expr )
    (46) matrix_factor -> . ID

    (               shift and go to state 64
    ID              shift and go to state 65

    matrix_factor                  shift and go to state 77

state 53

    (43) matrix_term -> matrix_term DOTDIV . matrix_factor
    (45) matrix_factor -> . ( matrix_expr )
    (46) matrix_factor -> . ID

    (               shift and go to state 64
    ID              shift and go to state 65

    matrix_factor                  shift and go to state 78

state 54

    (27) MID -> ID [ INTNUM , . INTNUM ]

    INTNUM          shift and go to state 79


state 55

    (9) if_instruction -> IF ( relational_expr ) . instructions_block
    (4) instructions_block -> . { instructions }

    {               shift and go to state 81

    instructions_block             shift and go to state 80

state 56

    (24) relational_expr -> ID GREATEREQUAL . INTNUM

    INTNUM          shift and go to state 82


state 57

    (25) relational_expr -> ID EQUALS . INTNUM

    INTNUM          shift and go to state 83


state 58

    (26) relational_expr -> ID LOWEREQUAL . INTNUM

    INTNUM          shift and go to state 84


state 59

    (16) expr -> expr + term .
    (19) term -> term . * factor
    (20) term -> term . / factor

    +               reduce using rule 16 (expr -> expr + term .)
    -               reduce using rule 16 (expr -> expr + term .)
    ;               reduce using rule 16 (expr -> expr + term .)
    )               reduce using rule 16 (expr -> expr + term .)
    *               shift and go to state 50
    /               shift and go to state 51


state 60

    (22) factor -> ( . expr )
    (16) expr -> . expr + term
    (17) expr -> . expr - term
    (18) expr -> . term
    (19) term -> . term * factor
    (20) term -> . term / factor
    (21) term -> . factor
    (22) factor -> . ( expr )
    (23) factor -> . ID

    (               shift and go to state 60
    ID              shift and go to state 61

    expr                           shift and go to state 46
    term                           shift and go to state 27
    factor                         shift and go to state 29

state 61

    (23) factor -> ID .

    *               reduce using rule 23 (factor -> ID .)
    /               reduce using rule 23 (factor -> ID .)
    +               reduce using rule 23 (factor -> ID .)
    -               reduce using rule 23 (factor -> ID .)
    ;               reduce using rule 23 (factor -> ID .)
    )               reduce using rule 23 (factor -> ID .)


state 62

    (17) expr -> expr - term .
    (19) term -> term . * factor
    (20) term -> term . / factor

    +               reduce using rule 17 (expr -> expr - term .)
    -               reduce using rule 17 (expr -> expr - term .)
    ;               reduce using rule 17 (expr -> expr - term .)
    )               reduce using rule 17 (expr -> expr - term .)
    *               shift and go to state 50
    /               shift and go to state 51


state 63

    (39) matrix_expr -> matrix_expr DOTADD matrix_term .
    (42) matrix_term -> matrix_term . DOTMUL matrix_factor
    (43) matrix_term -> matrix_term . DOTDIV matrix_factor

    DOTADD          reduce using rule 39 (matrix_expr -> matrix_expr DOTADD matrix_term .)
    DOTSUB          reduce using rule 39 (matrix_expr -> matrix_expr DOTADD matrix_term .)
    ;               reduce using rule 39 (matrix_expr -> matrix_expr DOTADD matrix_term .)
    )               reduce using rule 39 (matrix_expr -> matrix_expr DOTADD matrix_term .)
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53


state 64

    (45) matrix_factor -> ( . matrix_expr )
    (39) matrix_expr -> . matrix_expr DOTADD matrix_term
    (40) matrix_expr -> . matrix_expr DOTSUB matrix_term
    (41) matrix_expr -> . matrix_term
    (42) matrix_term -> . matrix_term DOTMUL matrix_factor
    (43) matrix_term -> . matrix_term DOTDIV matrix_factor
    (44) matrix_term -> . matrix_factor
    (45) matrix_factor -> . ( matrix_expr )
    (46) matrix_factor -> . ID

    (               shift and go to state 64
    ID              shift and go to state 65

    matrix_expr                    shift and go to state 47
    matrix_term                    shift and go to state 28
    matrix_factor                  shift and go to state 30

state 65

    (46) matrix_factor -> ID .

    DOTMUL          reduce using rule 46 (matrix_factor -> ID .)
    DOTDIV          reduce using rule 46 (matrix_factor -> ID .)
    DOTADD          reduce using rule 46 (matrix_factor -> ID .)
    DOTSUB          reduce using rule 46 (matrix_factor -> ID .)
    ;               reduce using rule 46 (matrix_factor -> ID .)
    )               reduce using rule 46 (matrix_factor -> ID .)


state 66

    (40) matrix_expr -> matrix_expr DOTSUB matrix_term .
    (42) matrix_term -> matrix_term . DOTMUL matrix_factor
    (43) matrix_term -> matrix_term . DOTDIV matrix_factor

    DOTADD          reduce using rule 40 (matrix_expr -> matrix_expr DOTSUB matrix_term .)
    DOTSUB          reduce using rule 40 (matrix_expr -> matrix_expr DOTSUB matrix_term .)
    ;               reduce using rule 40 (matrix_expr -> matrix_expr DOTSUB matrix_term .)
    )               reduce using rule 40 (matrix_expr -> matrix_expr DOTSUB matrix_term .)
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53


state 67

    (28) matrix -> [ outerlist ] .

    ;               reduce using rule 28 (matrix -> [ outerlist ] .)


state 68

    (32) outerlist -> outerlist ; . innerlist
    (34) innerlist -> . innerlist , elem
    (35) innerlist -> . elem
    (36) elem -> . ID
    (37) elem -> . INTNUM
    (38) elem -> . FLONUM

    ID              shift and go to state 42
    INTNUM          shift and go to state 43
    FLONUM          shift and go to state 44

    innerlist                      shift and go to state 85
    elem                           shift and go to state 41

state 69

    (34) innerlist -> innerlist , . elem
    (36) elem -> . ID
    (37) elem -> . INTNUM
    (38) elem -> . FLONUM

    ID              shift and go to state 42
    INTNUM          shift and go to state 43
    FLONUM          shift and go to state 44

    elem                           shift and go to state 86

state 70

    (29) matrix -> ONES ( INTNUM . )

    )               shift and go to state 87


state 71

    (22) factor -> ( expr ) .

    *               reduce using rule 22 (factor -> ( expr ) .)
    /               reduce using rule 22 (factor -> ( expr ) .)
    +               reduce using rule 22 (factor -> ( expr ) .)
    -               reduce using rule 22 (factor -> ( expr ) .)
    ;               reduce using rule 22 (factor -> ( expr ) .)
    )               reduce using rule 22 (factor -> ( expr ) .)


state 72

    (45) matrix_factor -> ( matrix_expr ) .

    DOTMUL          reduce using rule 45 (matrix_factor -> ( matrix_expr ) .)
    DOTDIV          reduce using rule 45 (matrix_factor -> ( matrix_expr ) .)
    DOTADD          reduce using rule 45 (matrix_factor -> ( matrix_expr ) .)
    DOTSUB          reduce using rule 45 (matrix_factor -> ( matrix_expr ) .)
    ;               reduce using rule 45 (matrix_factor -> ( matrix_expr ) .)
    )               reduce using rule 45 (matrix_factor -> ( matrix_expr ) .)


state 73

    (30) matrix -> ZEROS ( INTNUM . )

    )               shift and go to state 88


state 74

    (31) matrix -> EYE ( INTNUM . )

    )               shift and go to state 89


state 75

    (19) term -> term * factor .

    *               reduce using rule 19 (term -> term * factor .)
    /               reduce using rule 19 (term -> term * factor .)
    +               reduce using rule 19 (term -> term * factor .)
    -               reduce using rule 19 (term -> term * factor .)
    ;               reduce using rule 19 (term -> term * factor .)
    )               reduce using rule 19 (term -> term * factor .)


state 76

    (20) term -> term / factor .

    *               reduce using rule 20 (term -> term / factor .)
    /               reduce using rule 20 (term -> term / factor .)
    +               reduce using rule 20 (term -> term / factor .)
    -               reduce using rule 20 (term -> term / factor .)
    ;               reduce using rule 20 (term -> term / factor .)
    )               reduce using rule 20 (term -> term / factor .)


state 77

    (42) matrix_term -> matrix_term DOTMUL matrix_factor .

    DOTMUL          reduce using rule 42 (matrix_term -> matrix_term DOTMUL matrix_factor .)
    DOTDIV          reduce using rule 42 (matrix_term -> matrix_term DOTMUL matrix_factor .)
    DOTADD          reduce using rule 42 (matrix_term -> matrix_term DOTMUL matrix_factor .)
    DOTSUB          reduce using rule 42 (matrix_term -> matrix_term DOTMUL matrix_factor .)
    ;               reduce using rule 42 (matrix_term -> matrix_term DOTMUL matrix_factor .)
    )               reduce using rule 42 (matrix_term -> matrix_term DOTMUL matrix_factor .)


state 78

    (43) matrix_term -> matrix_term DOTDIV matrix_factor .

    DOTMUL          reduce using rule 43 (matrix_term -> matrix_term DOTDIV matrix_factor .)
    DOTDIV          reduce using rule 43 (matrix_term -> matrix_term DOTDIV matrix_factor .)
    DOTADD          reduce using rule 43 (matrix_term -> matrix_term DOTDIV matrix_factor .)
    DOTSUB          reduce using rule 43 (matrix_term -> matrix_term DOTDIV matrix_factor .)
    ;               reduce using rule 43 (matrix_term -> matrix_term DOTDIV matrix_factor .)
    )               reduce using rule 43 (matrix_term -> matrix_term DOTDIV matrix_factor .)


state 79

    (27) MID -> ID [ INTNUM , INTNUM . ]

    ]               shift and go to state 90


state 80

    (9) if_instruction -> IF ( relational_expr ) instructions_block .

    ID              reduce using rule 9 (if_instruction -> IF ( relational_expr ) instructions_block .)
    IF              reduce using rule 9 (if_instruction -> IF ( relational_expr ) instructions_block .)
    $end            reduce using rule 9 (if_instruction -> IF ( relational_expr ) instructions_block .)
    }               reduce using rule 9 (if_instruction -> IF ( relational_expr ) instructions_block .)


state 81

    (4) instructions_block -> { . instructions }
    (5) instructions -> . instructions instruction
    (6) instructions -> . instruction
    (7) instruction -> . assignment ;
    (8) instruction -> . if_instruction
    (10) assignment -> . ID = INTNUM
    (11) assignment -> . ID = FLONUM
    (12) assignment -> . ID = matrix
    (13) assignment -> . ID = expr
    (14) assignment -> . MID = INTNUM
    (15) assignment -> . ID = matrix_expr
    (9) if_instruction -> . IF ( relational_expr ) instructions_block
    (27) MID -> . ID [ INTNUM , INTNUM ]

    ID              shift and go to state 7
    IF              shift and go to state 9

    instructions                   shift and go to state 91
    instruction                    shift and go to state 4
    assignment                     shift and go to state 5
    if_instruction                 shift and go to state 6
    MID                            shift and go to state 8

state 82

    (24) relational_expr -> ID GREATEREQUAL INTNUM .

    )               reduce using rule 24 (relational_expr -> ID GREATEREQUAL INTNUM .)


state 83

    (25) relational_expr -> ID EQUALS INTNUM .

    )               reduce using rule 25 (relational_expr -> ID EQUALS INTNUM .)


state 84

    (26) relational_expr -> ID LOWEREQUAL INTNUM .

    )               reduce using rule 26 (relational_expr -> ID LOWEREQUAL INTNUM .)


state 85

    (32) outerlist -> outerlist ; innerlist .
    (34) innerlist -> innerlist . , elem

    ]               reduce using rule 32 (outerlist -> outerlist ; innerlist .)
    ;               reduce using rule 32 (outerlist -> outerlist ; innerlist .)
    ,               shift and go to state 69


state 86

    (34) innerlist -> innerlist , elem .

    ,               reduce using rule 34 (innerlist -> innerlist , elem .)
    ]               reduce using rule 34 (innerlist -> innerlist , elem .)
    ;               reduce using rule 34 (innerlist -> innerlist , elem .)


state 87

    (29) matrix -> ONES ( INTNUM ) .

    ;               reduce using rule 29 (matrix -> ONES ( INTNUM ) .)


state 88

    (30) matrix -> ZEROS ( INTNUM ) .

    ;               reduce using rule 30 (matrix -> ZEROS ( INTNUM ) .)


state 89

    (31) matrix -> EYE ( INTNUM ) .

    ;               reduce using rule 31 (matrix -> EYE ( INTNUM ) .)


state 90

    (27) MID -> ID [ INTNUM , INTNUM ] .

    =               reduce using rule 27 (MID -> ID [ INTNUM , INTNUM ] .)


state 91

    (4) instructions_block -> { instructions . }
    (5) instructions -> instructions . instruction
    (7) instruction -> . assignment ;
    (8) instruction -> . if_instruction
    (10) assignment -> . ID = INTNUM
    (11) assignment -> . ID = FLONUM
    (12) assignment -> . ID = matrix
    (13) assignment -> . ID = expr
    (14) assignment -> . MID = INTNUM
    (15) assignment -> . ID = matrix_expr
    (9) if_instruction -> . IF ( relational_expr ) instructions_block
    (27) MID -> . ID [ INTNUM , INTNUM ]

    }               shift and go to state 92
    ID              shift and go to state 7
    IF              shift and go to state 9

    instruction                    shift and go to state 10
    assignment                     shift and go to state 5
    if_instruction                 shift and go to state 6
    MID                            shift and go to state 8

state 92

    (4) instructions_block -> { instructions } .

    ID              reduce using rule 4 (instructions_block -> { instructions } .)
    IF              reduce using rule 4 (instructions_block -> { instructions } .)
    $end            reduce using rule 4 (instructions_block -> { instructions } .)
    }               reduce using rule 4 (instructions_block -> { instructions } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 16 resolved using rule (factor -> ID)
WARNING: rejected rule (matrix_factor -> ID) in state 16
