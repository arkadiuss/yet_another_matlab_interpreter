
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/leftDOTADDDOTSUBleftDOTMULDOTDIVADDASSIGN BREAK COMMENT CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQUALS EYE FLONUM FOR GREATEREQUAL ID IF INTNUM LOWEREQUAL MULASSIGN NOTEQUALS ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructions\n                        | instructions_block : \'{\' instructions \'}\'instructions : instructions instruction\n                    | instruction instruction : assignment \';\'\n                   | if_instruction\n                   | for_instruction\n                   | while_instruction\n                   | print_instruction\n                   | loop_instruction\n                   | return_instruction\n                   | instructions_blockif_instruction : IF \'(\' relational_expr \')\' instructions_block\n                      | IF \'(\' relational_expr \')\' instructionif_instruction : IF \'(\' relational_expr \')\' instructions_block ELSE instruction\n                      | IF \'(\' relational_expr \')\' instruction ELSE instructionfor_instruction : FOR ID \'=\' INTNUM \':\' ID instructions_block\n                       | FOR ID \'=\' INTNUM \':\' ID instruction\n                       | FOR ID \'=\' ID \':\' ID instructions_block\n                       | FOR ID \'=\' ID \':\' ID instructionwhile_instruction : WHILE \'(\' relational_expr \')\' instructions_block\n                         | WHILE \'(\' relational_expr \')\' instructionloop_instruction : BREAK \';\'\n                        | CONTINUE \';\' return_instruction : RETURN expr \';\'print_instruction : PRINT print_list \';\'print_list : print_list \',\' expr\n                  | print_list \',\' STRINGprint_list : expr\n                  | STRINGassignment : ID \'=\' token\n                  | MID \'=\' elem\n                  | ID ADDASSIGN token\n                  | ID SUBASSIGN token\n                  | ID MULASSIGN token\n                  | ID DIVASSIGN tokentoken : IDtoken : INTNUM\n             | FLONUM\n             | matrix\n             | expr\n             | matrix_expr\n             | unary_expr expr : expr \'+\' term\n            | expr \'-\' term\n            | term term : term \'*\' factor\n            | term \'/\' factor\n            | factorfactor : \'(\' expr \')\'\n              | elem relational_expr : expr GREATEREQUAL expr\n                       | expr EQUALS expr \n                       | expr NOTEQUALS expr\n                       | expr LOWEREQUAL expr\n                       | expr \'<\' expr\n                       | expr \'>\' exprMID : ID \'[\' INTNUM \',\' INTNUM \']\' matrix : EYE \'(\' INTNUM \')\'outerlist : \'[\' innerlist \']\'innerlist : elemelem : IDelem : INTNUM\n            | FLONUMmatrix_expr : matrix_expr DOTADD matrix_term\n                   | matrix_expr DOTSUB matrix_term\n                   | matrix_termmatrix_term : matrix_term DOTMUL matrix_factor\n                   | matrix_term DOTDIV matrix_factor\n                   | matrix_factormatrix_factor : \'(\' matrix_expr \')\'\n                     | matrix \n                     | ID unary_expr : \'-\' ID\n                  | ID "\'" '
    
_lr_action_items = {'$end':([0,1,2,3,4,6,7,8,9,10,11,12,23,24,45,46,72,79,80,118,119,128,129,136,137,138,139,140,141,],[-3,0,-1,-2,-6,-8,-9,-10,-11,-12,-13,-14,-5,-7,-25,-26,-28,-27,-4,-14,-16,-14,-24,-17,-18,-14,-22,-14,-20,]),'ID':([0,3,4,6,7,8,9,10,11,12,16,18,21,22,23,24,25,26,27,28,29,31,32,34,40,45,46,48,58,59,70,72,73,74,75,76,77,79,80,82,83,89,90,92,93,94,95,96,97,98,101,110,118,119,126,127,128,129,132,133,134,135,136,137,138,139,140,141,],[13,13,-6,-8,-9,-10,-11,-12,-13,-14,33,42,42,13,-5,-7,49,49,49,49,49,42,42,42,42,-25,-26,13,87,88,99,-28,42,42,42,42,42,-27,-4,111,111,111,111,13,42,42,42,42,42,42,13,111,-14,-16,134,135,-14,-24,13,13,13,13,-17,-18,-14,-22,-14,-20,]),'IF':([0,3,4,6,7,8,9,10,11,12,22,23,24,45,46,48,72,79,80,92,101,118,119,128,129,132,133,134,135,136,137,138,139,140,141,],[15,15,-6,-8,-9,-10,-11,-12,-13,-14,15,-5,-7,-25,-26,15,-28,-27,-4,15,15,-14,-16,-14,-24,15,15,15,15,-17,-18,-14,-22,-14,-20,]),'FOR':([0,3,4,6,7,8,9,10,11,12,22,23,24,45,46,48,72,79,80,92,101,118,119,128,129,132,133,134,135,136,137,138,139,140,141,],[16,16,-6,-8,-9,-10,-11,-12,-13,-14,16,-5,-7,-25,-26,16,-28,-27,-4,16,16,-14,-16,-14,-24,16,16,16,16,-17,-18,-14,-22,-14,-20,]),'WHILE':([0,3,4,6,7,8,9,10,11,12,22,23,24,45,46,48,72,79,80,92,101,118,119,128,129,132,133,134,135,136,137,138,139,140,141,],[17,17,-6,-8,-9,-10,-11,-12,-13,-14,17,-5,-7,-25,-26,17,-28,-27,-4,17,17,-14,-16,-14,-24,17,17,17,17,-17,-18,-14,-22,-14,-20,]),'PRINT':([0,3,4,6,7,8,9,10,11,12,22,23,24,45,46,48,72,79,80,92,101,118,119,128,129,132,133,134,135,136,137,138,139,140,141,],[18,18,-6,-8,-9,-10,-11,-12,-13,-14,18,-5,-7,-25,-26,18,-28,-27,-4,18,18,-14,-16,-14,-24,18,18,18,18,-17,-18,-14,-22,-14,-20,]),'BREAK':([0,3,4,6,7,8,9,10,11,12,22,23,24,45,46,48,72,79,80,92,101,118,119,128,129,132,133,134,135,136,137,138,139,140,141,],[19,19,-6,-8,-9,-10,-11,-12,-13,-14,19,-5,-7,-25,-26,19,-28,-27,-4,19,19,-14,-16,-14,-24,19,19,19,19,-17,-18,-14,-22,-14,-20,]),'CONTINUE':([0,3,4,6,7,8,9,10,11,12,22,23,24,45,46,48,72,79,80,92,101,118,119,128,129,132,133,134,135,136,137,138,139,140,141,],[20,20,-6,-8,-9,-10,-11,-12,-13,-14,20,-5,-7,-25,-26,20,-28,-27,-4,20,20,-14,-16,-14,-24,20,20,20,20,-17,-18,-14,-22,-14,-20,]),'RETURN':([0,3,4,6,7,8,9,10,11,12,22,23,24,45,46,48,72,79,80,92,101,118,119,128,129,132,133,134,135,136,137,138,139,140,141,],[21,21,-6,-8,-9,-10,-11,-12,-13,-14,21,-5,-7,-25,-26,21,-28,-27,-4,21,21,-14,-16,-14,-24,21,21,21,21,-17,-18,-14,-22,-14,-20,]),'{':([0,3,4,6,7,8,9,10,11,12,22,23,24,45,46,48,72,79,80,92,101,118,119,128,129,132,133,134,135,136,137,138,139,140,141,],[22,22,-6,-8,-9,-10,-11,-12,-13,-14,22,-5,-7,-25,-26,22,-28,-27,-4,22,22,-14,-16,-14,-24,22,22,22,22,-17,-18,-14,-22,-14,-20,]),'}':([4,6,7,8,9,10,11,12,23,24,45,46,48,72,79,80,118,119,128,129,136,137,138,139,140,141,],[-6,-8,-9,-10,-11,-12,-13,-14,-5,-7,-25,-26,80,-28,-27,-4,-14,-16,-14,-24,-17,-18,-14,-22,-14,-20,]),';':([5,19,20,35,36,37,38,39,41,42,43,44,47,49,50,51,52,53,54,55,56,60,61,62,63,64,65,67,81,86,88,102,103,104,105,106,107,108,109,111,112,114,115,116,130,],[24,45,46,72,-31,-32,-48,-51,-53,-64,-65,-66,79,-39,-33,-40,-41,-42,-43,-44,-45,-69,-72,-35,-36,-37,-38,-34,-77,-74,-76,-29,-30,-46,-47,-49,-50,-52,-67,-75,-68,-73,-70,-71,-61,]),'ELSE':([6,7,8,9,10,11,12,24,45,46,72,79,80,118,119,128,129,136,137,138,139,140,141,],[-8,-9,-10,-11,-12,-13,-14,-7,-25,-26,-28,-27,-4,132,133,-14,-24,-17,-18,-14,-22,-14,-20,]),'=':([13,14,33,131,],[25,31,70,-60,]),'ADDASSIGN':([13,],[26,]),'SUBASSIGN':([13,],[27,]),'MULASSIGN':([13,],[28,]),'DIVASSIGN':([13,],[29,]),'[':([13,],[30,]),'(':([15,17,18,21,25,26,27,28,29,32,34,40,57,58,73,74,75,76,77,82,83,89,90,93,94,95,96,97,98,110,],[32,34,40,40,58,58,58,58,58,40,40,40,84,58,40,40,40,40,40,110,110,110,110,40,40,40,40,40,40,110,]),'STRING':([18,73,],[37,103,]),'INTNUM':([18,21,25,26,27,28,29,30,31,32,34,40,58,70,73,74,75,76,77,84,91,93,94,95,96,97,98,],[43,43,51,51,51,51,51,66,43,43,43,43,43,100,43,43,43,43,43,113,117,43,43,43,43,43,43,]),'FLONUM':([18,21,25,26,27,28,29,31,32,34,40,58,73,74,75,76,77,93,94,95,96,97,98,],[44,44,52,52,52,52,52,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'EYE':([25,26,27,28,29,58,82,83,89,90,110,],[57,57,57,57,57,57,57,57,57,57,57,]),'-':([25,26,27,28,29,36,38,39,41,42,43,44,47,49,51,52,54,69,78,87,102,104,105,106,107,108,120,121,122,123,124,125,],[59,59,59,59,59,75,-48,-51,-53,-64,-65,-66,75,-64,-65,-66,75,75,75,-64,75,-46,-47,-49,-50,-52,75,75,75,75,75,75,]),',':([35,36,37,38,39,41,42,43,44,66,102,103,104,105,106,107,108,],[73,-31,-32,-48,-51,-53,-64,-65,-66,91,-29,-30,-46,-47,-49,-50,-52,]),'+':([36,38,39,41,42,43,44,47,49,51,52,54,69,78,87,102,104,105,106,107,108,120,121,122,123,124,125,],[74,-48,-51,-53,-64,-65,-66,74,-64,-65,-66,74,74,74,-64,74,-46,-47,-49,-50,-52,74,74,74,74,74,74,]),'GREATEREQUAL':([38,39,41,42,43,44,69,104,105,106,107,108,],[-48,-51,-53,-64,-65,-66,93,-46,-47,-49,-50,-52,]),'EQUALS':([38,39,41,42,43,44,69,104,105,106,107,108,],[-48,-51,-53,-64,-65,-66,94,-46,-47,-49,-50,-52,]),'NOTEQUALS':([38,39,41,42,43,44,69,104,105,106,107,108,],[-48,-51,-53,-64,-65,-66,95,-46,-47,-49,-50,-52,]),'LOWEREQUAL':([38,39,41,42,43,44,69,104,105,106,107,108,],[-48,-51,-53,-64,-65,-66,96,-46,-47,-49,-50,-52,]),'<':([38,39,41,42,43,44,69,104,105,106,107,108,],[-48,-51,-53,-64,-65,-66,97,-46,-47,-49,-50,-52,]),'>':([38,39,41,42,43,44,69,104,105,106,107,108,],[-48,-51,-53,-64,-65,-66,98,-46,-47,-49,-50,-52,]),')':([38,39,41,42,43,44,60,61,68,71,78,85,86,87,104,105,106,107,108,109,111,112,113,114,115,116,120,121,122,123,124,125,130,],[-48,-51,-53,-64,-65,-66,-69,-72,92,101,108,114,-74,-64,-46,-47,-49,-50,-52,-67,-75,-68,130,-73,-70,-71,-54,-55,-56,-57,-58,-59,-61,]),'*':([38,39,41,42,43,44,49,51,52,87,104,105,106,107,108,],[76,-51,-53,-64,-65,-66,-64,-65,-66,-64,76,76,-49,-50,-52,]),'/':([38,39,41,42,43,44,49,51,52,87,104,105,106,107,108,],[77,-51,-53,-64,-65,-66,-64,-65,-66,-64,77,77,-49,-50,-52,]),"'":([49,],[81,]),'DOTMUL':([49,53,60,61,86,87,109,111,112,114,115,116,130,],[-75,-74,89,-72,-74,-75,89,-75,89,-73,-70,-71,-61,]),'DOTDIV':([49,53,60,61,86,87,109,111,112,114,115,116,130,],[-75,-74,90,-72,-74,-75,90,-75,90,-73,-70,-71,-61,]),'DOTADD':([49,53,55,60,61,85,86,87,109,111,112,114,115,116,130,],[-75,-74,82,-69,-72,82,-74,-75,-67,-75,-68,-73,-70,-71,-61,]),'DOTSUB':([49,53,55,60,61,85,86,87,109,111,112,114,115,116,130,],[-75,-74,83,-69,-72,83,-74,-75,-67,-75,-68,-73,-70,-71,-61,]),':':([99,100,],[126,127,]),']':([117,],[131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,22,],[3,48,]),'instruction':([0,3,22,48,92,101,132,133,134,135,],[4,23,4,23,119,129,136,137,139,141,]),'assignment':([0,3,22,48,92,101,132,133,134,135,],[5,5,5,5,5,5,5,5,5,5,]),'if_instruction':([0,3,22,48,92,101,132,133,134,135,],[6,6,6,6,6,6,6,6,6,6,]),'for_instruction':([0,3,22,48,92,101,132,133,134,135,],[7,7,7,7,7,7,7,7,7,7,]),'while_instruction':([0,3,22,48,92,101,132,133,134,135,],[8,8,8,8,8,8,8,8,8,8,]),'print_instruction':([0,3,22,48,92,101,132,133,134,135,],[9,9,9,9,9,9,9,9,9,9,]),'loop_instruction':([0,3,22,48,92,101,132,133,134,135,],[10,10,10,10,10,10,10,10,10,10,]),'return_instruction':([0,3,22,48,92,101,132,133,134,135,],[11,11,11,11,11,11,11,11,11,11,]),'instructions_block':([0,3,22,48,92,101,132,133,134,135,],[12,12,12,12,118,128,12,12,138,140,]),'MID':([0,3,22,48,92,101,132,133,134,135,],[14,14,14,14,14,14,14,14,14,14,]),'print_list':([18,],[35,]),'expr':([18,21,25,26,27,28,29,32,34,40,58,73,93,94,95,96,97,98,],[36,47,54,54,54,54,54,69,69,78,78,102,120,121,122,123,124,125,]),'term':([18,21,25,26,27,28,29,32,34,40,58,73,74,75,93,94,95,96,97,98,],[38,38,38,38,38,38,38,38,38,38,38,38,104,105,38,38,38,38,38,38,]),'factor':([18,21,25,26,27,28,29,32,34,40,58,73,74,75,76,77,93,94,95,96,97,98,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,106,107,39,39,39,39,39,39,]),'elem':([18,21,25,26,27,28,29,31,32,34,40,58,73,74,75,76,77,93,94,95,96,97,98,],[41,41,41,41,41,41,41,67,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'token':([25,26,27,28,29,],[50,62,63,64,65,]),'matrix':([25,26,27,28,29,58,82,83,89,90,110,],[53,53,53,53,53,86,86,86,86,86,86,]),'matrix_expr':([25,26,27,28,29,58,110,],[55,55,55,55,55,85,85,]),'unary_expr':([25,26,27,28,29,],[56,56,56,56,56,]),'matrix_term':([25,26,27,28,29,58,82,83,110,],[60,60,60,60,60,60,109,112,60,]),'matrix_factor':([25,26,27,28,29,58,82,83,89,90,110,],[61,61,61,61,61,61,61,61,115,116,61,]),'relational_expr':([32,34,],[68,71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',26),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Mparser.py',30),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Mparser.py',31),
  ('instructions_block -> { instructions }','instructions_block',3,'p_instructions_block','Mparser.py',35),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',39),
  ('instructions -> instruction','instructions',1,'p_instructions_1','Mparser.py',40),
  ('instruction -> assignment ;','instruction',2,'p_instruction_1','Mparser.py',44),
  ('instruction -> if_instruction','instruction',1,'p_instruction_1','Mparser.py',45),
  ('instruction -> for_instruction','instruction',1,'p_instruction_1','Mparser.py',46),
  ('instruction -> while_instruction','instruction',1,'p_instruction_1','Mparser.py',47),
  ('instruction -> print_instruction','instruction',1,'p_instruction_1','Mparser.py',48),
  ('instruction -> loop_instruction','instruction',1,'p_instruction_1','Mparser.py',49),
  ('instruction -> return_instruction','instruction',1,'p_instruction_1','Mparser.py',50),
  ('instruction -> instructions_block','instruction',1,'p_instruction_1','Mparser.py',51),
  ('if_instruction -> IF ( relational_expr ) instructions_block','if_instruction',5,'p_if_instruction_1','Mparser.py',55),
  ('if_instruction -> IF ( relational_expr ) instruction','if_instruction',5,'p_if_instruction_1','Mparser.py',56),
  ('if_instruction -> IF ( relational_expr ) instructions_block ELSE instruction','if_instruction',7,'p_if_instruction_2','Mparser.py',60),
  ('if_instruction -> IF ( relational_expr ) instruction ELSE instruction','if_instruction',7,'p_if_instruction_2','Mparser.py',61),
  ('for_instruction -> FOR ID = INTNUM : ID instructions_block','for_instruction',7,'p_for_instruction','Mparser.py',65),
  ('for_instruction -> FOR ID = INTNUM : ID instruction','for_instruction',7,'p_for_instruction','Mparser.py',66),
  ('for_instruction -> FOR ID = ID : ID instructions_block','for_instruction',7,'p_for_instruction','Mparser.py',67),
  ('for_instruction -> FOR ID = ID : ID instruction','for_instruction',7,'p_for_instruction','Mparser.py',68),
  ('while_instruction -> WHILE ( relational_expr ) instructions_block','while_instruction',5,'p_while_instruction','Mparser.py',72),
  ('while_instruction -> WHILE ( relational_expr ) instruction','while_instruction',5,'p_while_instruction','Mparser.py',73),
  ('loop_instruction -> BREAK ;','loop_instruction',2,'p_loop_intruction','Mparser.py',77),
  ('loop_instruction -> CONTINUE ;','loop_instruction',2,'p_loop_intruction','Mparser.py',78),
  ('return_instruction -> RETURN expr ;','return_instruction',3,'p_return_instruction','Mparser.py',82),
  ('print_instruction -> PRINT print_list ;','print_instruction',3,'p_print_instruction','Mparser.py',86),
  ('print_list -> print_list , expr','print_list',3,'p_print_list_1','Mparser.py',90),
  ('print_list -> print_list , STRING','print_list',3,'p_print_list_1','Mparser.py',91),
  ('print_list -> expr','print_list',1,'p_print_list_2','Mparser.py',95),
  ('print_list -> STRING','print_list',1,'p_print_list_2','Mparser.py',96),
  ('assignment -> ID = token','assignment',3,'p_assignment','Mparser.py',100),
  ('assignment -> MID = elem','assignment',3,'p_assignment','Mparser.py',101),
  ('assignment -> ID ADDASSIGN token','assignment',3,'p_assignment','Mparser.py',102),
  ('assignment -> ID SUBASSIGN token','assignment',3,'p_assignment','Mparser.py',103),
  ('assignment -> ID MULASSIGN token','assignment',3,'p_assignment','Mparser.py',104),
  ('assignment -> ID DIVASSIGN token','assignment',3,'p_assignment','Mparser.py',105),
  ('token -> ID','token',1,'p_token_id','Mparser.py',123),
  ('token -> INTNUM','token',1,'p_token','Mparser.py',131),
  ('token -> FLONUM','token',1,'p_token','Mparser.py',132),
  ('token -> matrix','token',1,'p_token','Mparser.py',133),
  ('token -> expr','token',1,'p_token','Mparser.py',134),
  ('token -> matrix_expr','token',1,'p_token','Mparser.py',135),
  ('token -> unary_expr','token',1,'p_token','Mparser.py',136),
  ('expr -> expr + term','expr',3,'p_expr','Mparser.py',140),
  ('expr -> expr - term','expr',3,'p_expr','Mparser.py',141),
  ('expr -> term','expr',1,'p_expr','Mparser.py',142),
  ('term -> term * factor','term',3,'p_term','Mparser.py',153),
  ('term -> term / factor','term',3,'p_term','Mparser.py',154),
  ('term -> factor','term',1,'p_term','Mparser.py',155),
  ('factor -> ( expr )','factor',3,'p_factor','Mparser.py',171),
  ('factor -> elem','factor',1,'p_factor','Mparser.py',172),
  ('relational_expr -> expr GREATEREQUAL expr','relational_expr',3,'p_relational_expr','Mparser.py',179),
  ('relational_expr -> expr EQUALS expr','relational_expr',3,'p_relational_expr','Mparser.py',180),
  ('relational_expr -> expr NOTEQUALS expr','relational_expr',3,'p_relational_expr','Mparser.py',181),
  ('relational_expr -> expr LOWEREQUAL expr','relational_expr',3,'p_relational_expr','Mparser.py',182),
  ('relational_expr -> expr < expr','relational_expr',3,'p_relational_expr','Mparser.py',183),
  ('relational_expr -> expr > expr','relational_expr',3,'p_relational_expr','Mparser.py',184),
  ('MID -> ID [ INTNUM , INTNUM ]','MID',6,'p_MID','Mparser.py',200),
  ('matrix -> EYE ( INTNUM )','matrix',4,'p_matrix','Mparser.py',215),
  ('outerlist -> [ innerlist ]','outerlist',3,'p_outerlist','Mparser.py',223),
  ('innerlist -> elem','innerlist',1,'p_innerlist','Mparser.py',231),
  ('elem -> ID','elem',1,'p_elem_id','Mparser.py',235),
  ('elem -> INTNUM','elem',1,'p_elem','Mparser.py',243),
  ('elem -> FLONUM','elem',1,'p_elem','Mparser.py',244),
  ('matrix_expr -> matrix_expr DOTADD matrix_term','matrix_expr',3,'p_matrix_expr','Mparser.py',248),
  ('matrix_expr -> matrix_expr DOTSUB matrix_term','matrix_expr',3,'p_matrix_expr','Mparser.py',249),
  ('matrix_expr -> matrix_term','matrix_expr',1,'p_matrix_expr','Mparser.py',250),
  ('matrix_term -> matrix_term DOTMUL matrix_factor','matrix_term',3,'p_matrix_term','Mparser.py',253),
  ('matrix_term -> matrix_term DOTDIV matrix_factor','matrix_term',3,'p_matrix_term','Mparser.py',254),
  ('matrix_term -> matrix_factor','matrix_term',1,'p_matrix_term','Mparser.py',255),
  ('matrix_factor -> ( matrix_expr )','matrix_factor',3,'p_matrix_factor','Mparser.py',258),
  ('matrix_factor -> matrix','matrix_factor',1,'p_matrix_factor','Mparser.py',259),
  ('matrix_factor -> ID','matrix_factor',1,'p_matrix_factor','Mparser.py',260),
  ('unary_expr -> - ID','unary_expr',2,'p_unary_expr','Mparser.py',263),
  ("unary_expr -> ID '",'unary_expr',2,'p_unary_expr','Mparser.py',264),
]
